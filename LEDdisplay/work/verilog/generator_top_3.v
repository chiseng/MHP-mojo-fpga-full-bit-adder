/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module generator_top_3 (
    input clk,
    input rst,
    input [223:0] cols,
    output reg [223:0] colsout
  );
  
  
  
  reg [223:0] M_leftedcols_d, M_leftedcols_q = 1'h0;
  reg [29:0] M_counter_d, M_counter_q = 1'h0;
  wire [4-1:0] M_rng_out;
  randomNumGen_19 rng (
    .clk(clk),
    .rst(rst),
    .out(M_rng_out)
  );
  
  integer i;
  
  reg [3:0] random;
  
  always @* begin
    M_counter_d = M_counter_q;
    M_leftedcols_d = M_leftedcols_q;
    
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      colsout[(i)*14+13-:14] = 14'h0000;
    end
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      M_leftedcols_d[(i)*14+13-:14] = cols[(i)*14+13-:14] << 1'h1;
    end
    M_counter_d = M_counter_q + 1'h1;
    random = M_rng_out[0+3-:4];
    M_leftedcols_d[(random)*14+13-:14] = M_leftedcols_q[(random)*14+13-:14] + 14'h0001;
    colsout = M_leftedcols_q;
    M_counter_d = 1'h0;
  end
  
  always @(posedge clk) begin
    M_leftedcols_q <= M_leftedcols_d;
    M_counter_q <= M_counter_d;
  end
  
endmodule
