/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module check_4 (
    input clk,
    input rst,
    input [223:0] cols,
    input [31:0] rows,
    input score,
    output reg outscore
  );
  
  
  
  wire [16-1:0] M_alu_out;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu_8 alu (
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .out(M_alu_out),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  localparam AND = 6'h18;
  
  localparam ADD = 6'h00;
  
  reg [15:0] msb;
  
  reg [15:0] tempcheck;
  
  reg z;
  
  integer i;
  
  always @* begin
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      msb[(4'hf - i)*1+0-:1] = cols[(i)*14+13+0-:1];
    end
    M_alu_a = msb;
    M_alu_b = rows[16+15-:16];
    M_alu_alufn = 6'h18;
    tempcheck = M_alu_out;
    M_alu_a = tempcheck;
    M_alu_b = 16'h0000;
    M_alu_alufn = 6'h00;
    z = M_alu_z;
    if (z == 1'h0) begin
      outscore = score + 1'h1;
    end else begin
      outscore = score;
    end
  end
endmodule
