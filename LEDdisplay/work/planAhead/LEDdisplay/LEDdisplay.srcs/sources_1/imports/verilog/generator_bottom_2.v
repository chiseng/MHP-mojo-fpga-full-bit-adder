/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module generator_bottom_2 (
    input clk,
    input rst,
    input [0:0] button_l,
    input [0:0] button_r,
    input [31:0] rows,
    output reg [31:0] rowsout
  );
  
  
  
  wire [16-1:0] M_alu_out;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu_8 alu (
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .out(M_alu_out),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  localparam XOR = 6'h16;
  
  localparam SHL = 6'h20;
  
  localparam SHR = 6'h21;
  
  reg [15:0] xoroutput;
  
  reg [31:0] shiftleft;
  
  reg [31:0] shiftright;
  
  always @* begin
    rowsout[0+15-:16] = 16'h0000;
    rowsout[16+15-:16] = 16'h0000;
    M_alu_a = button_l;
    M_alu_b = button_r;
    M_alu_alufn = 6'h16;
    xoroutput = M_alu_out;
    M_alu_a = rows[0+15-:16];
    M_alu_b = 1'h1;
    M_alu_alufn = 6'h20;
    shiftleft[0+15-:16] = M_alu_out;
    M_alu_a = rows[16+15-:16];
    M_alu_b = 1'h1;
    M_alu_alufn = 6'h20;
    shiftleft[16+15-:16] = M_alu_out;
    M_alu_a = rows[0+15-:16];
    M_alu_b = 1'h1;
    M_alu_alufn = 6'h21;
    shiftright[0+15-:16] = M_alu_out;
    M_alu_a = rows[16+15-:16];
    M_alu_b = 1'h1;
    M_alu_alufn = 6'h21;
    shiftright[16+15-:16] = M_alu_out;
    if (xoroutput == 16'h0001) begin
      if (button_l == 1'h1 && (rows[0+14+0-:1] != 1'h1)) begin
        rowsout = shiftleft;
      end else begin
        if (button_r == 1'h1 && (rows[0+1+0-:1] != 1'h1)) begin
          rowsout = shiftright;
        end
      end
    end else begin
      rowsout = rows;
    end
  end
endmodule
