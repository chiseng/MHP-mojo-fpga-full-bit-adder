module generator_top (

    // module generates the top 16 columns of the LED matrix
    
    input clk,  // clock
    input rst,  // reset
    input cols[16][14],      // column values from previous cycle
    output colsout[16][14]   // column values for current cycle
  ) {
  .clk(clk){
    dff leftedcols[16][14];
    dff counter[30];
  .rst(rst){
      //pn_gen rng;
      //fsm new_fsm={STATE1};
        randomNumGen rng;
    }
  }

    
  var i; // for loop to initialise colsout
  
  sig random[4];         // random 4 bit number; since coconut can be on any of the 16 columns
 

  always {

    // initialise rowsout values 
    for ( i=0; i<16; i++){
      colsout[i] = 14b0;
    }
    
    
    // shift left all columns
    // coconuts all drop by 1 row
    for (i=0; i<16; i++){
      leftedcols.d[i] = cols[i] << 1;
    }
    
    counter.d=counter.q+1;
     random= rng.out[3:0];
    // add new coconut; randomly placed based on random number generator
    leftedcols.d[random] = leftedcols.q[random] + 14b1 ;
    
    
    // output the columns (all coconuts dropped by 1 and a new coconut is randomly added) 
    colsout = leftedcols.q;
    counter.d=0;
        }
    }

