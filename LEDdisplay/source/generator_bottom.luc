module generator_bottom (

    
// module generates the 2 rows of the LED matrix    
    
    input clk,  // clock
    input rst,  // reset
    input button_l[1],        // left button from user input
    input button_r[1],        // right button from user input
    input rows[2][16],        // rows values from previous cycle
    output rowsout[2][16]     // rows values for current cycle
  ) {
  // instantiate the alu module
  alu alu;
  
  // ALUFN value for the different functions used
  const XOR = 6b010110;
  const SHL = 6b100000;
  const SHR = 6b100001;
  
  // temp values of outputs of ALU
  sig xoroutput[16];       // to check if both buttons are pressed simultaneously
  sig shiftleft[2][16];    // to save rowsout values if left is pressed
  sig shiftright[2][16];   // to save rowsout values if right is pressed
  
  
  always {
  
    // initialise rowsout values 
    rowsout[0] = 16b0;
    rowsout[1] = 16b0;
    
    alu.a = button_l;      // button_l XOR button_r
    alu.b = button_r;
    alu.alufn = XOR;
    xoroutput = alu.out;
    
    alu.a = rows[0];      // shift left row 0 by 1 
    alu.b = 1;
    alu.alufn = SHL;
    shiftleft[0] = alu.out;
    
    alu.a = rows[1];      // shift left row 1 by 1
    alu.b = 1;
    alu.alufn = SHL;
    shiftleft[1] = alu.out;
    
    alu.a = rows[0];      // shift right row 0 by 1
    alu.b = 1;
    alu.alufn = SHR;
    shiftright[0] = alu.out;
    
    alu.a = rows[1];      // shift right row 1 by 1
    alu.b = 1;
    alu.alufn = SHR;
    shiftright[1] = alu.out;
    
    
    
    
    if (xoroutput == 16b1){   
    // if only one button is pressed
    
      if (button_l == 1 && (rows[0][14] != 1)){  
      // if left is pressed and user is not at the left edge
      // then shift left rows by 1
         rowsout = shiftleft;
      }
      else if (button_r == 1 && (rows[0][1] != 1)){  
      // if right is pressed and user is not at the right edge
      // then shift right rows by 1
        rowsout = shiftright;
      }
  }
    else {
    // do nothing; output original rows
    rowsout = rows;
  }
      
}
} 