/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [15:0] a,
    output reg [15:0] c
  );
  
  
  
  reg rst;
  
  reg [255:0] led_pattern;
  
  reg [15:0] tempRows;
  
  reg [15:0] tempColumns;
  
  integer i;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [16-1:0] M_ledM_a;
  wire [16-1:0] M_ledM_c;
  reg [256-1:0] M_ledM_pattern;
  led_matrix_2 ledM (
    .clk(clk),
    .rst(rst),
    .pattern(M_ledM_pattern),
    .a(M_ledM_a),
    .c(M_ledM_c)
  );
  
  always @* begin
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      led_pattern[(i)*16+15-:16] = 16'h0ffe;
    end
    M_ledM_pattern = led_pattern;
    a = M_ledM_c;
    c = M_ledM_a;
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
  end
endmodule
